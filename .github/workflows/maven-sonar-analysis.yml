name: Maven Sonar Analysis

on:
  workflow_call:
    inputs:
      SERVICE_LOCATION:
        required: true
        type: string
      SONAR_URL:
        required: false
        type: string
        default: 'https://sonarcloud.io'
    secrets:
      SONAR_TOKEN:
        required: true
      ORG_KEY:
        required: true
      OSSRH_USER:
        required: true
      OSSRH_SECRET:
        required: true
      OSSRH_TOKEN:
        required: true
      GPG_SECRET:
        required: true

jobs:
  maven-onar-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup branch and env
        run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
          echo "GPG_TTY=$(tty)" >> $GITHUB_ENV
          echo "SONAR URL : ${{ inputs.SONAR_URL }}"

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ env.BRANCH_NAME }}

      - name: Install xmlstartlet and xmllint
        run: |
          sudo apt-get update
          sudo apt-get install xmlstarlet libxml2-utils

      - name: Setup the settings file for ossrh server
        run: echo "<settings>   <servers>    <server>    <id>ossrh</id>      <username>${{secrets.OSSRH_USER}}</username>      <password>${{secrets.OSSRH_SECRET}}</password>     </server>  </servers>  <profiles>     <profile>      <id>ossrh</id>      <activation>       <activeByDefault>true</activeByDefault>      </activation>      <properties>       <gpg.executable>gpg2</gpg.executable>       <gpg.passphrase>${{secrets.GPG_SECRET}}</gpg.passphrase>      </properties>     </profile>     <profile>      <id>allow-snapshots</id>      <activation>       <activeByDefault>true</activeByDefault>      </activation>      <repositories>       <repository>        <id>snapshots-repo</id>        <url>https://oss.sonatype.org/content/repositories/snapshots</url>        <releases>           <enabled>false</enabled>        </releases>        <snapshots>           <enabled>true</enabled>        </snapshots>       </repository>       <repository>        <id>releases-repo</id>        <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>        <releases>           <enabled>true</enabled>        </releases>        <snapshots>           <enabled>false</enabled>        </snapshots>       </repository>       <repository>        <id>danubetech-maven-public</id>        <url>https://repo.danubetech.com/repository/maven-public</url>       </repository>      </repositories>     </profile>     <profile>      <id>sonar</id>      <properties>       <sonar.sources>.</sonar.sources>       <sonar.host.url>https://sonarcloud.io</sonar.host.url>      </properties>      <activation>       <activeByDefault>false</activeByDefault>      </activation>     </profile>  </profiles> </settings>" > $GITHUB_WORKSPACE/settings.xml

      - name: Build with Maven
        run: cd ${{ inputs.SERVICE_LOCATION }} && mvn -B  package --file pom.xml -s $GITHUB_WORKSPACE/settings.xml

      - name: Analyze with SonarCloud
        run: |
          cd ${{ inputs.SERVICE_LOCATION }} &&  mvn -B verify sonar:sonar -Dsonar.projectKey=mosip_${{ github.event.repository.name }} -Dsonar.organization=${{ secrets.ORG_KEY }} -Dsonar.host.url=${{ inputs.SONAR_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }} --file pom.xml -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEVOPS_WEBHOOK }} # required
        if: failure() # Pick up events even if the job fails or is canceled.