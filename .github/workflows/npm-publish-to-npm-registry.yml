name: Publish to NPM

on:
  workflow_call:
    inputs:
      SERVICE_LOCATION:
        description: 'SERVICE LOCATION'
        required: true
        type: string
      ANDROID_LOCATION:
        description: 'ANDROID LOCATION'
        required: false
        type: string
        default: false
      GRADLEW_ARGS:
        description: 'Provide gradlew arguments'
        required: false
        type: string
    secrets:
      NPM_AUTH_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

env:
  ANDROID_HOME: '/opt/android-sdk/'

jobs:
  npm-publish-to-npm-registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-node@v3.7.0
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org/'

      - name: Cache Gradle packages
        uses: actions/cache@v3.3.1
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache npm dependencies
        uses: actions/cache@v3.3.1
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: NPM Install Dependencies
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm install

      - name: Build APK via Gradlew
        if: ${{ inputs.ANDROID_LOCATION != 'false' }}
        run: |
          cd ${{ inputs.SERVICE_LOCATION }}/${{ inputs.ANDROID_LOCATION }}
          sed -i -e 's/\r$//' ./gradlew
          chmod +x ./gradlew
          ./gradlew ${{ inputs.GRADLEW_ARGS }}

      - name: Verify the build application
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm run verify

      - name: Publish package
        run: cd ${{ inputs.SERVICE_LOCATION }} && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Tag
        run: |
          pwd
          cd ${{ inputs.SERVICE_LOCATION }}
          VERSION=$(grep -o '"version": "[^"]*' package.json | sed 's/"version": "//') #Replace with the versioning strategy you prefer
          VERSION="v${VERSION}_npm"
          git tag $VERSION
          git push origin $VERSION

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure() # Pick up events even if the job fails or is canceled.
